@import "../themes.scss";

@mixin themify($themes: $themes) {
  @each $theme, $map in $themes {
    .theme-#{$theme} & {
      $theme-map: () !global;
      @each $key, $submap in $map {
        $value: map-get(map-get($themes, $theme), "#{$key}");
        $theme-map: map-merge(
          $theme-map,
          (
            $key: $value,
          )
        ) !global;
      }

      @content;
      $theme-map: null !global;
    }
  }
}
@function themed($key) {
  @return map-get($theme-map, $key);
}


@mixin col-width($size) {
  @if $size==null {
    @for $i from 1 through ($col-count) {
      .col-#{$i} {
        flex: 0 1 $i * 100% / $col-count;
        width: $i * 100% / $col-count;
        padding: 0 $indent-standard;
      }
    }
  } @else {
    @for $i from 1 through ($col-count) {
      .col-#{$size}-#{$i} {
        flex: 0 1 $i * 100% / $col-count;
        width: $i * 100% / $col-count;
        padding: 0 $indent-standard;
      }
    }
  }
}

@mixin col-offset($size) {
  @if $size==null {
    @for $i from 1 through ($col-count) {
      .col-offset-#{$i} {
        margin-right: $i * 100% / $col-count;
      }
    }
  } @else {
    @for $i from 1 through ($col-count) {
      .col-offset-#{$size}-#{$i} {
        margin-right: $i * 100% / $col-count;
      }
    }
  }
}
